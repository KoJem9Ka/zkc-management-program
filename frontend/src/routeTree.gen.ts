/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProveRouteImport } from './routes/prove/route'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProveSelectCredentialImport } from './routes/prove/select-credential'
import { Route as ProveMismatchImport } from './routes/prove/mismatch'
import { Route as AuthenticatedCredentialsImport } from './routes/_authenticated/credentials'
import { Route as AuthenticatedCredentialIssueImport } from './routes/_authenticated/credential-issue'
import { Route as AuthenticatedCredentialIdImport } from './routes/_authenticated/credential.$id'

// Create/Update Routes

const ProveRouteRoute = ProveRouteImport.update({
  path: '/prove',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProveSelectCredentialRoute = ProveSelectCredentialImport.update({
  path: '/select-credential',
  getParentRoute: () => ProveRouteRoute,
} as any)

const ProveMismatchRoute = ProveMismatchImport.update({
  path: '/mismatch',
  getParentRoute: () => ProveRouteRoute,
} as any)

const AuthenticatedCredentialsRoute = AuthenticatedCredentialsImport.update({
  path: '/credentials',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedCredentialIssueRoute =
  AuthenticatedCredentialIssueImport.update({
    path: '/credential-issue',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedCredentialIdRoute = AuthenticatedCredentialIdImport.update({
  path: '/credential/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/prove': {
      preLoaderRoute: typeof ProveRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/credential-issue': {
      preLoaderRoute: typeof AuthenticatedCredentialIssueImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/credentials': {
      preLoaderRoute: typeof AuthenticatedCredentialsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/prove/mismatch': {
      preLoaderRoute: typeof ProveMismatchImport
      parentRoute: typeof ProveRouteImport
    }
    '/prove/select-credential': {
      preLoaderRoute: typeof ProveSelectCredentialImport
      parentRoute: typeof ProveRouteImport
    }
    '/_authenticated/credential/$id': {
      preLoaderRoute: typeof AuthenticatedCredentialIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthenticatedRouteRoute.addChildren([
    AuthenticatedCredentialIssueRoute,
    AuthenticatedCredentialsRoute,
    AuthenticatedCredentialIdRoute,
  ]),
  ProveRouteRoute.addChildren([ProveMismatchRoute, ProveSelectCredentialRoute]),
])

/* prettier-ignore-end */
